<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Node js Express Tutorial</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
    crossorigin="anonymous"></script>
    <style>ul {
      list-style-type: none;
      margin: 10px 0px;
      padding: 0px;
    }</style>
</head>

<body onload="sortTable(0)">
  <div class="container">
    <h1>Juuksuri päevakava</h1>
    <td>
      <br>

     
      <table id="myTable" class="table table-striped">
        <thead>
          <tr>
            <td><b>Kell</b></td>
            <td><b>kliendi nimi ja teenuse nimetus</b></td>

            <td colspan="2"><b>Action</b> </td>

    </td>
    </tr>
    </thead>
    <tbody>
      <% for(var i=0; i < coins.length; i++) { %>
      <tr>
        <td>
          <%= coins[i].price;
       
          %>
        </td>
        <td>
          <%= coins[i].name;  %>
        </td>
        <td><a href="/coins/edit/<%= coins[i]._id %>" class="btn btn-primary">Edit</a></td>
        <td><a href="/coins/delete/<%= coins[i]._id %>" class="btn btn-danger">Delete</a></td>
      </tr>
      <% } %>
    </tbody>
    </table>



    
    <form method="post" action="/coins/post">
     
      <div class="form-group">
        <label for="item">Vali kellaaeg</label>
        <!-- <input type="number" step="0.01" class="form-control" id="price" name="price"> -->
        <select id="options" class="form-control" id="price" name="price" required>


          

          <option value="choose" selected disabled hidden>Vali kellaaeg</option>

          <%
          let newArray=[];
          for ( var i = 0; i < coins.length; i++ ){
            newArray.push(coins[i].price);

          }
          
            var options = [ "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" ];
           
            for ( var i = 0; i < options.length; i++ ){
            
                options = options.filter( function( el ) {
                
                  return newArray.indexOf( el ) < 0;
                 
                } );
            
      }
            %>
          <%   
            for ( var i = 0; i < options.length; i++ ){  
              console.log(options);
              
              %>
          <option value="<%=options[i] %>">
            <%=options[i] %>
          </option>
          <% }  console.log(options); %>


        </select>

      </div>
      <div class="form-group">
        <label for="item">Kliendi nimi ja teenuse nimetus</label>
        <input id="service" placeholder="Info" type="text" class="form-control" id="name" name="name" required>
      </div>
      <button type="submit" class="btn btn-success active">Salvesta</button>
    </form>

    <br>
    <input type="text" placeholder="Ütle midagi" id="txt">
    <button id="send">Send</button>

    <ul id="messages"></ul>
    <p class="notification"></p>
    <p id="myList"></p>
    <!-- <span> <a href="/coins/create %>" class="btn btn-success active" style="width:200px;margin-top:10px;">Create</a></span> -->
  </div>


  <!-- Vaja on tekstivälja, nuppu ning ühte elementi veel, kuhu sõnumid tekitada -->

  <script>
 function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable");
            switching = true;
            //Set the sorting direction to ascending:
            dir = "asc";
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    /*check if the two rows should switch place,
                    based on the direction, asc or desc:*/
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }







    var socket = io();
    table = document.getElementById("myTable");
    var time = document.getElementById('options');
    // elemendid muutujatesse
    var chat = document.getElementById("messages");
    var txt = document.getElementById("txt");
    var sendBtn = document.getElementById("send");

    // nupu funktsioon
    sendBtn.addEventListener("click", function (e) {
      // saadab teate nimega "input" serverisse, selle peame serveri pool vastu võtma, et kõikidele klientidele edastada
      // socket.emit('input', {
      //   price: options.value,
      //   name: service.value

      // });
     
      // txt.value = "";
      socket.emit('input', txt.value);
      // tekstivälja sisu tühjaks
      txt.value = "";




    });

    // selle funktsiooni abil võtma serveri poolt vastu teateid nimega 'chat'
    socket.on('chat', function (msg) {

      chat.innerHTML += '<li>' + msg + '</li>';
      //var insertedRows = [];


      // Object.keys(msg).forEach(function (key) {
      //   console.log(msg[key]);
      //   insertedRows.push(msg[key]);
      //   var row = table.insertRow();
      //   var cell1 = row.insertCell(0);
      //   var cell2 = row.insertCell(1);
      //   cell1.innerHTML = msg[key];
      // });

      // for (var x = 0; x < insertedRows.length; x++) {
      //   console.log(msg[x].price);

      //   var row = table.insertRow();
      //   var cell1 = row.insertCell(0);
      //   var cell2 = row.insertCell(1);
      //   cell1.innerHTML = msg[x].price;
      // }

      // ning lisame saadud teate kõikide teiste teadete hulka
      // chat.innerHTML += '<li>' + msg + '</li>';



    });

    socket.on('broadcast', function (data) {
      var node = document.createElement("P");
      var textnode = document.createTextNode(data.description);
      node.appendChild(textnode);
      document.getElementById("myList").appendChild(node);

    });



  </script>




</body>

</html>